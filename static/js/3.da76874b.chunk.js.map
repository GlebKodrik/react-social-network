{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Massage.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","dialogItemMasseges","name","DialogItem","dialogItemWrapper","src","alt","to","id","maxLenght","maxLengthCreator","AddDialogFormReduxForm","reduxForm","form","onSubmit","handleSubmit","action","Field","component","Textarea","validate","required","placeholder","Dialogs","state","messagePage","messagesArray","messageData","map","m","dealogsArray","dialogsData","d","isAuth","dialogs","dialogsItem","dialogsMasseges","dialogsMassegesLocation","values","addMessageCreator","newMessage","compose","connect","dispatch","withRedirect"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,kBAAoB,mCAAmC,mBAAqB,sC,oFCMlHC,EAJC,SAACC,GACb,OAAO,qBAAKC,UAAS,UAAKC,IAAEC,oBAArB,SAA4CH,EAAMI,Q,QCS9CC,EATI,SAACL,GAEhB,OACI,sBAAKC,UAAS,UAAKC,IAAEC,mBAAP,YAA6BD,IAAEI,mBAA7C,UACI,qBAAKL,UAAU,YAAYM,IAAKP,EAAMO,IAAKC,IAAI,KAC/C,cAAC,IAAD,CAASC,GAAE,mBAAcT,EAAMU,IAA/B,SAAsCV,EAAMI,W,0CCAlDO,EAAYC,YAAiB,KAc7BC,EAAyBC,YAAU,CACrCC,KAAM,WADqBD,EAZT,SAACd,GACnB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAcC,OAAO,GAA3C,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,GAAYP,KAAM,aAC5DoB,YAAa,gGACpB,8BACI,2JA+BDC,EAtBC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAgBF,EAAMG,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAoB3B,KAAM2B,EAAE3B,KAAMM,GAAIqB,EAAErB,IAA1BqB,EAAErB,OAC3DsB,EAAeN,EAAMO,YAAYH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAuBxB,GAAIwB,EAAExB,GAAIN,KAAM8B,EAAE9B,KAAMG,IAAK2B,EAAE3B,KAArC2B,EAAExB,OAKjE,OAAKV,EAAMmC,OAEP,sBAAKlC,UAAWC,IAAEkC,QAAlB,UACI,qBAAKnC,UAAS,UAAKC,IAAEmC,YAAP,KAAd,SACKL,IAEL,sBAAK/B,UAAS,UAAKC,IAAEoC,gBAAP,YAA0BpC,IAAEqC,yBAA1C,UACKX,EACD,cAACf,EAAD,CAAwBG,SAXhB,SAACwB,GACjBxC,EAAMyC,kBAAkBD,EAAOE,qBAET,cAAC,IAAD,CAAUjC,GAAI,Y,uBCf7BkC,sBACXC,aAdkB,SAAClB,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAGF,SAACkB,GACtB,MAAM,CACFJ,kBAAmB,SAACC,GAChBG,EAASJ,YAAkBC,SAOnCI,IAFWH,CAGblB","file":"static/js/3.da76874b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__30jrD\",\"dialogItemWrapper\":\"Dialogs_dialogItemWrapper__SEJ6l\",\"dialogItemMasseges\":\"Dialogs_dialogItemMasseges__1Jtxg\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={`${s.dialogItemMasseges}`}>{props.name}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div className={`${s.dialogItemMasseges} ${s.dialogItemWrapper}`}>\r\n            <img className=\"avatarImg\" src={props.src} alt=\"\"/>\r\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Massage';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../Healpers/validator/validators\";\r\n\r\nconst maxLenght = maxLengthCreator(150);\r\n\r\nconst AddDialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} action=\"\">\r\n            <Field component={Textarea} validate={[required, maxLenght]} name={\"newMessage\"}\r\n                   placeholder={\"Напиши сообщение\"}/>\r\n            <div>\r\n                <button>Отправить сообщение</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddDialogFormReduxForm = reduxForm({\r\n    form: 'message'\r\n})(AddDialogForm);\r\nconst Dialogs = (props) => {\r\n    let state = props.messagePage;\r\n    let messagesArray = state.messageData.map(m => <Message key={m.id} name={m.name} id={m.id}/>);\r\n    let dealogsArray = state.dialogsData.map(d => <DialogItem key={d.id} id={d.id} name={d.name} src={d.src}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessageCreator(values.newMessage);\r\n    }\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={`${s.dialogsItem} `}>\r\n                {dealogsArray}\r\n            </div>\r\n            <div className={`${s.dialogsMasseges} ${s.dialogsMassegesLocation}`}>\r\n                {messagesArray}\r\n                <AddDialogFormReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { addMessageCreator } from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRedirect} from \"../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        messagePage: state.messagePage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addMessageCreator: (newMessage) => {\r\n            dispatch(addMessageCreator(newMessage));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withRedirect\r\n)(Dialogs);"],"sourceRoot":""}