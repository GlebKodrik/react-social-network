{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Massage.jsx","components/Dialogs/DialogItem/DialogItem.jsx","Redux/dialogs-selectors.js","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/index.js"],"names":["module","exports","Message","props","className","s","dialogItemMasseges","name","newMessage","DialogItem","dialogItemWrapper","src","alt","to","id","getMessagePage","state","messagePage","maxLenght","maxLengthCreator","DialogFormReduxForm","reduxForm","form","onSubmit","handleSubmit","action","Field","component","Textarea","validate","required","placeholder","onChange","sendMessageState","Dialogs","useSelector","dispatch","useDispatch","useState","message","setMessage","messagesArray","messageData","map","m","dealogsArray","dialogsData","d","dialogs","dialogsItem","dialogsMasseges","dialogsMassegesLocation","addMessageCreator","value"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,kBAAoB,mCAAmC,mBAAqB,sC,2FCMlHC,EAJC,SAACC,GACb,OAAO,qBAAKC,UAAS,UAAKC,IAAEC,oBAArB,SAA4CH,EAAMI,KAAKC,c,QCSnDC,EATI,SAACN,GAEhB,OACI,sBAAKC,UAAS,UAAKC,IAAEC,mBAAP,YAA6BD,IAAEK,mBAA7C,UACI,qBAAKN,UAAU,YAAYO,IAAKR,EAAMQ,IAAKC,IAAI,KAC/C,cAAC,IAAD,CAASC,GAAE,mBAAcV,EAAMW,IAA/B,SAAsCX,EAAMI,W,OCT3CQ,EAAiB,SAACC,GAC3B,OAAOA,EAAMC,a,0CCIXC,EAAYC,YAAiB,KAatBC,EAAsBC,YAAU,CACzCC,KAAM,WADyBD,EAXhB,SAAClB,GAChB,OACI,uBAAMoB,SAAUpB,EAAMqB,aAAcC,OAAO,GAA3C,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,GAAYX,KAAM,aAC5DwB,YAAa,8FAAoBC,SAAU7B,EAAM8B,mBACxD,8BACI,2JCyBDC,G,YA5BC,WACZ,IAAMjB,EAAckB,YAAYpB,GAC1BqB,EAAWC,cAFC,EAGWC,mBAAS,IAHpB,mBAGbC,EAHa,KAGHC,EAHG,KAIdC,EAAgBxB,EAAYyB,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,eAAwBA,GAAVA,EAAE9B,OACjE+B,EAAe5B,EAAY6B,YAAYH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,eAA2BA,GAAVA,EAAEjC,OAUvE,OACI,sBAAKV,UAAWC,IAAE2C,QAAlB,UACI,qBAAK5C,UAAS,UAAKC,IAAE4C,YAAP,KAAd,SACKJ,IAEL,sBAAKzC,UAAS,UAAKC,IAAE6C,gBAAP,YAA0B7C,IAAE8C,yBAA1C,UACKV,EACD,cAACrB,EAAD,CAAqBG,SAfb,WAChBa,EAASgB,YAAkBb,KAc2BP,SAXjC,SAACqB,GACtBb,EAAWa,cCpBJnB","file":"static/js/3.98b12498.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__tR4AZ\",\"dialogItemWrapper\":\"Dialogs_dialogItemWrapper__1ZhCk\",\"dialogItemMasseges\":\"Dialogs_dialogItemMasseges__1_OhZ\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={`${s.dialogItemMasseges}`}>{props.name.newMessage}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div className={`${s.dialogItemMasseges} ${s.dialogItemWrapper}`}>\r\n            <img className=\"avatarImg\" src={props.src} alt=\"\"/>\r\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )}\r\n\r\nexport default DialogItem;","export const getMessagePage = (state) => {\r\n    return state.messagePage\r\n}\r\n\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../Healpers/validator/validators\";\r\nimport React from \"react\";\r\n\r\nconst maxLenght = maxLengthCreator(150);\r\n\r\nconst DialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} action=\"\">\r\n            <Field component={Textarea} validate={[required, maxLenght]} name={\"newMessage\"}\r\n                   placeholder={\"Напиши сообщение\"} onChange={props.sendMessageState}/>\r\n            <div>\r\n                <button>Отправить сообщение</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const DialogFormReduxForm = reduxForm({\r\n    form: 'message'\r\n})(DialogForm);","import React, {useState} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Massage';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMessagePage} from \"../../Redux/dialogs-selectors\";\r\nimport {addMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport {DialogFormReduxForm} from \"./DialogsForm\";\r\nimport {withRedirect} from \"../hoc/AuthRedirect\";\r\n\r\nconst Dialogs = () => {\r\n    const messagePage = useSelector(getMessagePage);\r\n    const dispatch = useDispatch();\r\n    let [message , setMessage] = useState(\"\");\r\n    let messagesArray = messagePage.messageData.map(m => <Message key={m.id} {...m}/>);\r\n    let dealogsArray = messagePage.dialogsData.map(d => <DialogItem key={d.id} {...d}/>)\r\n\r\n    let addNewMessage = () => {\r\n        dispatch(addMessageCreator(message));\r\n    }\r\n\r\n    const sendMessageState = (value) => {\r\n        setMessage(value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={`${s.dialogsItem} `}>\r\n                {dealogsArray}\r\n            </div>\r\n            <div className={`${s.dialogsMasseges} ${s.dialogsMassegesLocation}`}>\r\n                {messagesArray}\r\n                <DialogFormReduxForm onSubmit={addNewMessage} onChange={sendMessageState}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\n\r\nexport default Dialogs;"],"sourceRoot":""}